subprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'osgi'
    apply plugin: 'maven'
    apply from  : '../mavenPublish.gradle'

    Properties cfg = new Properties()
    cfg.load(new FileInputStream("$rootDir/controlsfx-build.properties"))
	
    ext {
      artifact_suffix       = cfg.artifact_suffix
      specification_title   = cfg.controlsfx_specification_title  //'Java 8u20'
      specification_version = cfg.controlsfx_specification_version //'8.20.7'
      controlsfx_name       = 'controlsfx'
      fxsampler_name        = 'fxsampler'
      fxsampler_version     = cfg.fxsampler_specification_version + artifact_suffix
      fxsampler_mainClass   = 'fxsampler.FXSampler'
    }


    group = 'org.controlsfx'
    version = specification_version + artifact_suffix

    sourceCompatibility = '1.9'
    targetCompatibility = '1.9'

    repositories {
       mavenCentral()
    }

    dependencies {
       testCompile 'junit:junit:[4,)'
    }

    test {
       testLogging {
        // Show that tests are run in the command-line output
           events 'started', 'passed'
       }
    }

    compileJava {  
        options.encoding = "UTF-8"
        options.incremental = true
        options.compilerArgs += [
             // For various usages of TraversalEngine
             "--add-exports=javafx.graphics/com.sun.javafx.scene.traversal=ALL-UNNAMED",
             // For various behaviors across controls
             "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED",
             // For ReadOnlyUnbackedObservableList across files
             "--add-exports=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED",
             // For InputMap used in behavior classes
             "--add-exports=javafx.controls/com.sun.javafx.scene.control.inputmap=ALL-UNNAMED",
             // For EventHandlerManager across files
             "--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED",
             // For MappingChange, NonIterableChange across files
             "--add-exports=javafx.base/com.sun.javafx.collections=ALL-UNNAMED",
             // For VersionInfo in VersionChecker
             "--add-exports=javafx.base/com.sun.javafx.runtime=ALL-UNNAMED",
             // For WebPage in SVGLoader
             "--add-exports=javafx.web/com.sun.webkit=ALL-UNNAMED"
        ]
    }

    // Currently Javadoc creation fails because of exported packages not visible to javadoc task
    javadoc {
        enabled = false
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.java
        from sourceSets.main.resources
        classifier = 'sources'
    }

    task javadocJar(type: Jar) {
        dependsOn javadoc
        from javadoc.destinationDir
        classifier = 'javadoc'
    }

    artifacts {
        archives sourceJar
        archives javadocJar
    }

}
